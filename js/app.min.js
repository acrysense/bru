"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // checker
  var useItemChecker = function useItemChecker(els, onClickOutside) {
    var checkBodyClick = function checkBodyClick(e) {
      var currentEl = e.target;
      while (currentEl) {
        if (els.includes(currentEl)) break;
        currentEl = currentEl.parentNode;
      }
      if (!currentEl) {
        onClickOutside();
        removeBodyChecker();
      }
    };
    function setBodyChecker() {
      document.documentElement.addEventListener('click', checkBodyClick);
    }
    function removeBodyChecker() {
      document.documentElement.removeEventListener('click', checkBodyClick);
    }
    return {
      setBodyChecker: setBodyChecker,
      removeBodyChecker: removeBodyChecker
    };
  };

  // nav
  var navLinkDropdown = document.querySelectorAll('.nav__elem .nav__link');
  if (navLinkDropdown) {
    navLinkDropdown.forEach(function (item) {
      var close = function close() {
        var parent = item.closest('.nav__elem');
        parent.classList.remove('is--active');
      };
      var itemChecker = useItemChecker([item.parentNode], close);
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.nav__elem');
        if (parent.classList.contains('is--active')) {
          close();
        } else {
          parent.classList.add('is--active');
          itemChecker.setBodyChecker();
        }
      });
    });
  }

  // mobile menu
  var mobileMenu = document.getElementById('menu');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  var mobileMenuClose = document.querySelector('.menu__close');
  if (mobileMenu && mobileMenuTrigger) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        mobileMenu.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        mobileMenu.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
    if (mobileMenuClose) {
      mobileMenuClose.addEventListener('click', function (event) {
        event.preventDefault();
        if (mobileMenu.classList.contains('is--active')) {
          mobileMenu.classList.remove('is--active');
          document.body.classList.remove('scroll-disabled');
        }
      });
    }
  }

  // select
  var selected = document.querySelectorAll('.c-sort__trigger');
  var optionsList = document.querySelectorAll('.c-sort__value');
  if (selected) {
    selected.forEach(function (item) {
      var close = function close() {
        document.querySelectorAll('.c-sort').forEach(function (child) {
          child.classList.remove('is--active');
        });
      };
      var itemChecker = useItemChecker([item.parentNode].concat(_toConsumableArray(selected)), close);
      item.addEventListener('click', function () {
        var parent = item.closest('.c-sort');
        if (parent.classList.contains('is--active')) {
          close();
        } else {
          close();
          parent.classList.add('is--active');
          itemChecker.setBodyChecker();
        }
      });
    });
  }
  if (optionsList) {
    optionsList.forEach(function (option) {
      option.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = option.closest('.c-sort');
        var currentSelected = parent.querySelector('.c-sort__trigger > span');
        currentSelected.innerHTML = option.innerHTML;
        parent.classList.remove('is--active');
      });
    });
  }

  // portal news slider
  var portalNewsSlider = document.querySelectorAll('.portal-news__slider .swiper');
  if (portalNewsSlider) {
    portalNewsSlider.forEach(function (slider) {
      var myPortalNewsSlider = new Swiper(slider, {
        slidesPerView: 3,
        spaceBetween: 20,
        loop: true,
        navigation: {
          prevEl: slider.closest('.portal-news__slider').querySelector('.swiper-button-prev'),
          nextEl: slider.closest('.portal-news__slider').querySelector('.swiper-button-next')
        },
        pagination: {
          el: slider.closest('.portal-news__slider').querySelector('.swiper-pagination'),
          type: 'fraction'
        },
        breakpoints: {
          0: {
            slidesPerView: 1,
            spaceBetween: 20
          },
          768: {
            slidesPerView: 2,
            spaceBetween: 20
          },
          1024: {
            slidesPerView: 3,
            spaceBetween: 12
          },
          1200: {
            slidesPerView: 3,
            spaceBetween: 20
          }
        }
      });
    });
  }
});